{"ast":null,"code":"import _slicedToArray from\"D:/collection/PROJECT`s/JAPAN/8863074498439810063enhancementv7/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{createRef,createContext,useEffect,useCallback,useState,useMemo}from\"react\";import Row from\"antd/lib/row\";import Col from\"antd/lib/col\";import\"../index.css\";//Components\nimport EditorController from\"./EditorController\";import{AppTabsEnum,appData}from\"../AppUtils\";import BabylonManager from\"../BabylonManager\";//\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var gmRef=/*#__PURE__*/createRef(null);export var GmContext=/*#__PURE__*/createContext(null);//\nvar Editor=function Editor(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),gameManager=_useState2[0],setGameManager=_useState2[1];var _useState3=useState(AppTabsEnum.editorTab),_useState4=_slicedToArray(_useState3,2),selectedTab=_useState4[0],setSeletedTab=_useState4[1];useEffect(function(){var GManger=BabylonManager(gmRef.current).GManger;//Create Babylonjs Ref\nsetGameManager(GManger);},[setGameManager]);var setHandler=useCallback(function(newHandler){setGameManager(function(GManger){GManger.studioSceneManager.handlers=newHandler;//Hnadlers\nreturn GManger;});},[]);var renderTabs=useCallback(function(){switch(selectedTab){default:case AppTabsEnum.editorTab:return/*#__PURE__*/_jsx(Row,{style:{height:\"100%\"},type:\"flex\",children:/*#__PURE__*/_jsxs(Col,{span:24,style:{height:\"100%\",background:\"radial-gradient(at top, #fff 0%, #fff 100%) top\"},children:[/*#__PURE__*/_jsx(EditorController,{appData:appData}),/*#__PURE__*/_jsx(\"canvas\",{className:\"canvas\",ref:gmRef})]})});}},[selectedTab]);return/*#__PURE__*/_jsx(GmContext.Provider,{value:{gm:gameManager,setHandler:setHandler},children:renderTabs()});};export default Editor;// On Windows Shift + Alt + F.\n// On Mac Shift + Option + F.","map":{"version":3,"sources":["D:/collection/PROJECT`s/JAPAN/8863074498439810063enhancementv7/src/Editor/index.jsx"],"names":["React","createRef","createContext","useEffect","useCallback","useState","useMemo","Row","Col","EditorController","AppTabsEnum","appData","BabylonManager","gmRef","GmContext","Editor","gameManager","setGameManager","editorTab","selectedTab","setSeletedTab","GManger","current","setHandler","newHandler","studioSceneManager","handlers","renderTabs","height","background","gm"],"mappings":"qLAAA,MAAOA,CAAAA,KAAP,EACEC,SADF,CAEEC,aAFF,CAGEC,SAHF,CAIEC,WAJF,CAKEC,QALF,CAMEC,OANF,KAOO,OAPP,CAQA,MAAOC,CAAAA,GAAP,KAAgB,cAAhB,CACA,MAAOC,CAAAA,GAAP,KAAgB,cAAhB,CACA,MAAO,cAAP,CAEA;AACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,OAASC,WAAT,CAAsBC,OAAtB,KAAqC,aAArC,CACA,MAAOC,CAAAA,cAAP,KAA2B,mBAA3B,CACA;wFACA,GAAMC,CAAAA,KAAK,cAAGZ,SAAS,CAAC,IAAD,CAAvB,CACA,MAAO,IAAMa,CAAAA,SAAS,cAAGZ,aAAa,CAAC,IAAD,CAA/B,CACP;AAEA,GAAMa,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnB,cAAsCV,QAAQ,CAAC,IAAD,CAA9C,wCAAOW,WAAP,eAAoBC,cAApB,eACA,eAAqCZ,QAAQ,CAACK,WAAW,CAACQ,SAAb,CAA7C,yCAAOC,WAAP,eAAoBC,aAApB,eAGAjB,SAAS,CAAC,UAAM,CACd,GAAMkB,CAAAA,OAAO,CAAGT,cAAc,CAACC,KAAK,CAACS,OAAP,CAAd,CAA8BD,OAA9C,CAAuD;AACvDJ,cAAc,CAACI,OAAD,CAAd,CACD,CAHQ,CAGN,CAACJ,cAAD,CAHM,CAAT,CAKA,GAAMM,CAAAA,UAAU,CAAGnB,WAAW,CAAC,SAACoB,UAAD,CAAc,CAC3CP,cAAc,CAAC,SAACI,OAAD,CAAW,CAC1BA,OAAO,CAACI,kBAAR,CAA2BC,QAA3B,CAAsCF,UAAtC,CAAkD;AAClD,MAAOH,CAAAA,OAAP,CACD,CAHe,CAAd,CAID,CAL6B,CAK5B,EAL4B,CAA9B,CAOA,GAAMM,CAAAA,UAAU,CAAGvB,WAAW,CAAC,UAAM,CACnC,OAAQe,WAAR,EACE,QACA,IAAKT,CAAAA,WAAW,CAACQ,SAAjB,CACE,mBACE,KAAC,GAAD,EAAK,KAAK,CAAE,CAAEU,MAAM,CAAE,MAAV,CAAZ,CAAgC,IAAI,CAAC,MAArC,uBACE,MAAC,GAAD,EACE,IAAI,CAAE,EADR,CAEE,KAAK,CAAE,CACLA,MAAM,CAAE,MADH,CAELC,UAAU,CAAE,iDAFP,CAFT,wBAOE,KAAC,gBAAD,EACE,OAAO,CAAElB,OADX,EAPF,cAUE,eAAgB,SAAS,CAAC,QAA1B,CAAmC,GAAG,CAAEE,KAAxC,EAVF,GADF,EADF,CAHJ,CAoBD,CArB6B,CAqB3B,CAACM,WAAD,CArB2B,CAA9B,CAuBA,mBACE,KAAC,SAAD,CAAW,QAAX,EAAoB,KAAK,CAAE,CAACW,EAAE,CAACd,WAAJ,CAAiBO,UAAU,CAAEA,UAA7B,CAA3B,UAAsEI,UAAU,EAAhF,EADF,CAGD,CA3CD,CA4CA,cAAeZ,CAAAA,MAAf,CAEA;AACA","sourcesContent":["import React, {\r\n  createRef,\r\n  createContext,\r\n  useEffect,\r\n  useCallback,\r\n  useState,\r\n  useMemo,\r\n} from \"react\";\r\nimport Row from \"antd/lib/row\";\r\nimport Col from \"antd/lib/col\";\r\nimport \"../index.css\";\r\n\r\n//Components\r\nimport EditorController from \"./EditorController\";\r\nimport { AppTabsEnum, appData } from \"../AppUtils\";\r\nimport BabylonManager from \"../BabylonManager\";\r\n//\r\nconst gmRef = createRef(null);\r\nexport const GmContext = createContext(null);\r\n//\r\n\r\nconst Editor = () => {\r\n  const [gameManager, setGameManager] = useState(null);\r\n  const [selectedTab, setSeletedTab] = useState(AppTabsEnum.editorTab);\r\n\r\n\r\n  useEffect(() => {\r\n    const GManger = BabylonManager(gmRef.current).GManger; //Create Babylonjs Ref\r\n    setGameManager(GManger);\r\n  }, [setGameManager]);\r\n\r\n  const setHandler = useCallback((newHandler)=>{\r\n    setGameManager((GManger)=>{\r\n    GManger.studioSceneManager.handlers = newHandler; //Hnadlers\r\n    return GManger;\r\n  });\r\n  },[])\r\n\r\n  const renderTabs = useCallback(() => {\r\n    switch (selectedTab) {\r\n      default:\r\n      case AppTabsEnum.editorTab:\r\n        return (\r\n          <Row style={{ height: \"100%\" }} type=\"flex\">\r\n            <Col\r\n              span={24}\r\n              style={{\r\n                height: \"100%\",\r\n                background: \"radial-gradient(at top, #fff 0%, #fff 100%) top\",\r\n              }}\r\n            >\r\n              <EditorController\r\n                appData={appData}\r\n              />\r\n              <canvas {...{}} className=\"canvas\" ref={gmRef} />\r\n            </Col>\r\n          </Row>\r\n        );\r\n    }\r\n  }, [selectedTab]);\r\n\r\n  return (\r\n    <GmContext.Provider value={{gm:gameManager, setHandler: setHandler}}>{renderTabs()}</GmContext.Provider>\r\n  );\r\n};\r\nexport default Editor;\r\n\r\n// On Windows Shift + Alt + F.\r\n// On Mac Shift + Option + F.\r\n"]},"metadata":{},"sourceType":"module"}