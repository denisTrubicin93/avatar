{"ast":null,"code":"var _jsxFileName = \"D:\\\\collection\\\\PROJECT`s\\\\JAPAN\\\\8863074498439810063enhancementv7\\\\src\\\\Editor\\\\EditorController.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useCallback, useState, useMemo } from \"react\";\nimport { Modal, Button, Spin, Radio } from \"antd\";\nimport Row from \"antd/lib/row\";\nimport Col from \"antd/lib/col\";\nimport ScrollMenu from \"react-horizontal-scrolling-menu\";\nimport \"../index.css\";\nimport { LeftOutlined, RightOutlined, HomeFilled, createFromIconfontCN, ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { GmContext } from \"../Editor\";\nimport CategoryButton from \"./CategoryButton\";\nimport ItemButton from \"./ItemButton\";\nimport { Colors, Categories } from \"../Config.json\";\nimport { useEffect } from \"react\";\nimport ListModal from \"./ListModal\";\nimport { AppTabsEnum } from \"../AppUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst IconFont = createFromIconfontCN({\n  scriptUrl: [\"//at.alicdn.com/t/font_1788044_0dwu4guekcwr.js\", // icon-javascript, icon-java, icon-shoppingcart (overrided)\n  \"//at.alicdn.com/t/font_1788592_a5xf2bdic3u.js\" // icon-shoppingcart, icon-python\n  ]\n});\n_c = IconFont;\nconst {\n  confirm\n} = Modal;\n\nconst EditorController = props => {\n  _s();\n\n  const {\n    appData\n  } = props;\n  const [selectedCat, setSelectedCat] = useState(Object.keys(Categories)[0]);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [selectedColor, setSelectedColor] = useState(\"\");\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [charcterData, setCharcterData] = useState(null); //Modal\n\n  const [selectedModalData, setSelectedModalData] = useState(null);\n  const [selectedListTab, setSelectedListTab] = useState(false);\n  const [isOwnedTab, setIsOwnedTab] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const {\n    gm: gameManager,\n    setHandler\n  } = useContext(GmContext); //3D\n\n  const studioSceneHandlers = useMemo(() => {\n    return {\n      onLoad: () => {\n        setIsLoading(false);\n      },\n      hello: () => {\n        setIsLoading(false);\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (!gameManager) return;\n    setHandler(studioSceneHandlers); //load\n\n    const onFinish = result => {\n      setIsLoading(false);\n      setSelectedItem(gameManager.studioSceneManager.charcterProps[Object.keys(Categories)[0]] ? gameManager.studioSceneManager.charcterProps[Object.keys(Categories)[0]].myId : null);\n      setCharcterData(result.data);\n      setTotalPrice(result.totalPrice);\n    };\n\n    gameManager.studioSceneManager.loadAllCharcterData(appData.item_equipped, onFinish);\n  }, [gameManager]);\n  useEffect(() => {\n    console.log(\"charcterData ====>> \", charcterData);\n  }, [charcterData]);\n  const loadItemPerId = useCallback(itemId => {\n    if (!gameManager) return;\n    setIsLoading(true);\n\n    let onLoad = result => {\n      const {\n        data,\n        totalPrice\n      } = result;\n      setCharcterData(data);\n      setTotalPrice(totalPrice);\n      setIsLoading(false);\n    };\n\n    gameManager.studioSceneManager.handleLoadItemPerId(selectedCat, itemId ? itemId : null, onLoad);\n  }, [selectedCat, gameManager]);\n  const itemsPerCategory = useMemo(() => {\n    if (selectedCat) {\n      // isOwnedTab\n      let selectedCatObj = appData.item_owned.find(catObj => catObj.category === selectedCat);\n      return Object.values(Categories[selectedCat]).filter(itemData => isOwnedTab && selectedCatObj.items.includes(itemData.id) || !isOwnedTab && !selectedCatObj.items.includes(itemData.id)).map((itemData, index) => {\n        return /*#__PURE__*/_jsxDEV(ItemButton, {\n          itemData: itemData,\n          selected: selectedItem === itemData.id ? true : false\n        }, itemData.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this);\n      });\n    } else return [];\n  }, [selectedCat, selectedItem, isOwnedTab]);\n  const renderColors = useCallback(() => {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        width: \"100%\",\n        // height: \"50px\",\n        justifyContent: \"center\",\n        alignItems: \"center\" // marginTop: \"-90px\",\n\n      },\n      children: Object.values(Colors).map((color, index) => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          disabled: !Boolean(selectedItem),\n          style: {\n            visibility: \"visible\",\n            margin: \"8px\",\n            backgroundColor: color.hex,\n            border: selectedColor === color.id ? \"2.5px solid rgb(0 116 255)\" : \"1px solid #898e94\"\n          },\n          onClick: () => {\n            let isSelected = selectedColor === color.id;\n            gameManager.studioSceneManager.handleChangeCatColor(selectedCat, isSelected ? null : color.hex);\n            setSelectedColor(isSelected ? null : color.id);\n          },\n          type: \"default\",\n          shape: \"circle\",\n          size: \"large\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this);\n  }, [selectedCat, selectedColor, selectedItem, gameManager]);\n\n  function showConfirm() {\n    confirm({\n      title: \"購入しますか？\",\n      icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this),\n      // content: 'Some descriptions',\n      okText: \"はい\",\n      closable: true,\n      cancelText: \"キャンセル\",\n\n      onOk() {\n        console.log(\"OK\");\n      },\n\n      onCancel() {\n        console.log(\"Cancel\");\n      }\n\n    });\n  }\n\n  const handleOnModalOpen = useCallback(selectedTab => {\n    setSelectedModalData(() => {\n      if (selectedTab === AppTabsEnum.ownedTab) return appData.item_owned;else return charcterData;\n    });\n    setSelectedListTab(selectedTab);\n    setIsOwnedTab(true);\n  }, [charcterData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        position: \"fixed\",\n        width: \"100%\",\n        bottom: 0,\n        height: \"100%\",\n        pointerEvents: \"none\"\n      },\n      type: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        icon: /*#__PURE__*/_jsxDEV(HomeFilled, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }, this),\n        shape: \"circle\",\n        size: \"large\",\n        style: {\n          position: \"absolute\",\n          width: \"75px\",\n          height: \"75px\",\n          margin: \"15px\",\n          pointerEvents: \"all\"\n        },\n        onClick: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          pointerEvents: \"all\",\n          left: \"8%\",\n          top: \"6%\",\n          marginLeft: \"30%\" // marginTop: \"15vh\",\n\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: isOwnedTab ? \"primary\" : \"default\",\n          onClick: () => {\n            setIsOwnedTab(true); //remove 3d items\n\n            gameManager.studioSceneManager.clearCharcterData();\n          },\n          children: \"\\u7269\\u5165\\u308C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: !isOwnedTab ? \"primary\" : \"default\",\n          onClick: () => {\n            setIsLoading(true);\n            setIsOwnedTab(false); //load 3d items\n\n            gameManager.studioSceneManager.clearCharcterData();\n\n            const onFinish = result => {\n              setIsLoading(false);\n              setSelectedItem(gameManager.studioSceneManager.charcterProps[Object.keys(Categories)[0]] ? gameManager.studioSceneManager.charcterProps[Object.keys(Categories)[0]].myId : null);\n              setCharcterData(result.data);\n              setTotalPrice(result.totalPrice);\n            };\n\n            gameManager.studioSceneManager.loadAllCharcterData(appData.item_equipped, onFinish);\n          },\n          children: \"\\u304A\\u5E97\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 24,\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          justify: \"start\",\n          style: {\n            bottom: \"70%\",\n            position: \"absolute\",\n            width: \"100%\",\n            pointerEvents: \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"absolute\",\n              pointerEvents: \"all\",\n              right: \"8%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              icon: /*#__PURE__*/_jsxDEV(IconFont, {\n                type: \"icon-shoppingcart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 23\n              }, this),\n              shape: \"circle\",\n              size: \"large\",\n              disabled: isOwnedTab,\n              style: {\n                width: \"60px\",\n                height: \"60px\",\n                margin: \"25px 10px\",\n                pointerEvents: \"all\"\n              },\n              onClick: showConfirm\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              style: {\n                position: \"absolute\",\n                right: \"40%\",\n                bottom: \"0\",\n                color: \"#000\"\n              },\n              children: isOwnedTab ? 0 : totalPrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: \"absolute\",\n                width: \"15px\",\n                height: \"15px\",\n                right: \"0\",\n                bottom: \"0\",\n                background: `url(/Ui/items/${\"dollar.png\"})`,\n                backgroundRepeat: \"no-repeat\",\n                // border: \"1px solid #898e94\",\n                boxSizing: \"border-box\",\n                margin: \"2px 0px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          justify: \"start\",\n          style: {\n            height: \"35%\",\n            maxHeight: \"250px\",\n            bottom: \"1%\",\n            position: \"absolute\",\n            width: \"100%\",\n            pointerEvents: \"all\"\n          },\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Spin, {\n              spinning: isLoading,\n              children: [/*#__PURE__*/_jsxDEV(ScrollMenu, {\n                menuStyle: {\n                  width: \"100%\",\n                  justifyContent: \"center\"\n                },\n                alignCenter: true,\n                translate: 10,\n                hideArrows: true // alignOnResize={true}\n                ,\n                data: Object.keys(Categories).map((category, index) => {\n                  return /*#__PURE__*/_jsxDEV(CategoryButton, {\n                    category: category,\n                    selected: selectedCat\n                  }, category, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 23\n                  }, this);\n                }),\n                arrowLeft: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"text\",\n                  icon: /*#__PURE__*/_jsxDEV(LeftOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 29\n                  }, this),\n                  size: \"middle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 21\n                }, this),\n                arrowRight: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"text\",\n                  icon: /*#__PURE__*/_jsxDEV(RightOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 29\n                  }, this),\n                  size: \"middle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 21\n                }, this),\n                selected: selectedCat,\n                onSelect: key => {\n                  setSelectedCat(key);\n                  setSelectedItem(gameManager.studioSceneManager.charcterProps[key] ? gameManager.studioSceneManager.charcterProps[key].myId : null);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 17\n              }, this), selectedCat === \"hair\" && renderColors(), /*#__PURE__*/_jsxDEV(ScrollMenu, {\n                menuStyle: {\n                  width: \"100%\",\n                  justifyContent: \"center\"\n                },\n                translate: 10,\n                hideArrows: true,\n                alignCenter: true,\n                alignOnResize: true,\n                data: itemsPerCategory,\n                arrowLeft: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"text\",\n                  icon: /*#__PURE__*/_jsxDEV(LeftOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 29\n                  }, this),\n                  size: \"middle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 21\n                }, this),\n                arrowRight: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"text\",\n                  icon: /*#__PURE__*/_jsxDEV(RightOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 414,\n                    columnNumber: 29\n                  }, this),\n                  size: \"middle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 21\n                }, this),\n                selected: selectedItem,\n                onSelect: key => {\n                  let newValue = key === selectedItem ? undefined : key;\n                  loadItemPerId(newValue);\n                  setSelectedItem(newValue);\n                  if (selectedCat === \"hair\") setSelectedColor(null);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(EditorController, \"3+yR8XyYRCNi/hNHJSZa+EpzP4A=\");\n\n_c2 = EditorController;\nexport default EditorController;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IconFont\");\n$RefreshReg$(_c2, \"EditorController\");","map":{"version":3,"sources":["D:/collection/PROJECT`s/JAPAN/8863074498439810063enhancementv7/src/Editor/EditorController.jsx"],"names":["React","useContext","useCallback","useState","useMemo","Modal","Button","Spin","Radio","Row","Col","ScrollMenu","LeftOutlined","RightOutlined","HomeFilled","createFromIconfontCN","ExclamationCircleOutlined","GmContext","CategoryButton","ItemButton","Colors","Categories","useEffect","ListModal","AppTabsEnum","IconFont","scriptUrl","confirm","EditorController","props","appData","selectedCat","setSelectedCat","Object","keys","selectedItem","setSelectedItem","selectedColor","setSelectedColor","totalPrice","setTotalPrice","charcterData","setCharcterData","selectedModalData","setSelectedModalData","selectedListTab","setSelectedListTab","isOwnedTab","setIsOwnedTab","isLoading","setIsLoading","gm","gameManager","setHandler","studioSceneHandlers","onLoad","hello","onFinish","result","studioSceneManager","charcterProps","myId","data","loadAllCharcterData","item_equipped","console","log","loadItemPerId","itemId","handleLoadItemPerId","itemsPerCategory","selectedCatObj","item_owned","find","catObj","category","values","filter","itemData","items","includes","id","map","index","renderColors","width","justifyContent","alignItems","color","Boolean","visibility","margin","backgroundColor","hex","border","isSelected","handleChangeCatColor","showConfirm","title","icon","okText","closable","cancelText","onOk","onCancel","handleOnModalOpen","selectedTab","ownedTab","position","bottom","height","pointerEvents","left","top","marginLeft","clearCharcterData","right","background","backgroundRepeat","boxSizing","maxHeight","key","newValue","undefined"],"mappings":"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","sourcesContent":["import React, { useContext, useCallback, useState, useMemo } from \"react\";\r\nimport { Modal, Button, Spin, Radio } from \"antd\";\r\n\r\nimport Row from \"antd/lib/row\";\r\nimport Col from \"antd/lib/col\";\r\nimport ScrollMenu from \"react-horizontal-scrolling-menu\";\r\nimport \"../index.css\";\r\nimport {\r\n  LeftOutlined,\r\n  RightOutlined,\r\n  HomeFilled,\r\n  createFromIconfontCN,\r\n  ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { GmContext } from \"../Editor\";\r\nimport CategoryButton from \"./CategoryButton\";\r\nimport ItemButton from \"./ItemButton\";\r\nimport { Colors, Categories } from \"../Config.json\";\r\nimport { useEffect } from \"react\";\r\nimport ListModal from \"./ListModal\";\r\nimport { AppTabsEnum } from \"../AppUtils\";\r\n\r\nconst IconFont = createFromIconfontCN({\r\n  scriptUrl: [\r\n    \"//at.alicdn.com/t/font_1788044_0dwu4guekcwr.js\", // icon-javascript, icon-java, icon-shoppingcart (overrided)\r\n    \"//at.alicdn.com/t/font_1788592_a5xf2bdic3u.js\", // icon-shoppingcart, icon-python\r\n  ],\r\n});\r\nconst { confirm } = Modal;\r\n\r\nconst EditorController = (props) => {\r\n  const { appData } = props;\r\n\r\n  const [selectedCat, setSelectedCat] = useState(Object.keys(Categories)[0]);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [selectedColor, setSelectedColor] = useState(\"\");\r\n\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  const [charcterData, setCharcterData] = useState(null);\r\n\r\n  //Modal\r\n  const [selectedModalData, setSelectedModalData] = useState(null);\r\n  const [selectedListTab, setSelectedListTab] = useState(false);\r\n  const [isOwnedTab, setIsOwnedTab] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const { gm: gameManager, setHandler } = useContext(GmContext);\r\n\r\n  //3D\r\n  const studioSceneHandlers = useMemo(() => {\r\n    return {\r\n      onLoad: () => {\r\n        setIsLoading(false);\r\n      },\r\n      hello: () => {\r\n        setIsLoading(false);\r\n      },\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!gameManager) return;\r\n    setHandler(studioSceneHandlers);\r\n    //load\r\n\r\n    const onFinish = (result) => {\r\n      setIsLoading(false);\r\n      setSelectedItem(\r\n        gameManager.studioSceneManager.charcterProps[Object.keys(Categories)[0]]\r\n          ? gameManager.studioSceneManager.charcterProps[\r\n              Object.keys(Categories)[0]\r\n            ].myId\r\n          : null\r\n      );\r\n      setCharcterData(result.data);\r\n      setTotalPrice(result.totalPrice);\r\n    };\r\n    gameManager.studioSceneManager.loadAllCharcterData(\r\n      appData.item_equipped,\r\n      onFinish\r\n    );\r\n  }, [gameManager]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"charcterData ====>> \", charcterData);\r\n  }, [charcterData]);\r\n\r\n  const loadItemPerId = useCallback(\r\n    (itemId) => {\r\n      if (!gameManager) return;\r\n      setIsLoading(true);\r\n      let onLoad = (result) => {\r\n        const { data, totalPrice } = result;\r\n        setCharcterData(data);\r\n        setTotalPrice(totalPrice);\r\n        setIsLoading(false);\r\n      };\r\n      gameManager.studioSceneManager.handleLoadItemPerId(\r\n        selectedCat,\r\n        itemId ? itemId : null,\r\n        onLoad\r\n      );\r\n    },\r\n    [selectedCat, gameManager]\r\n  );\r\n\r\n  const itemsPerCategory = useMemo(() => {\r\n    if (selectedCat) {\r\n      // isOwnedTab\r\n      let selectedCatObj = appData.item_owned.find(\r\n        (catObj) => catObj.category === selectedCat\r\n      );\r\n      return Object.values(Categories[selectedCat])\r\n        .filter(\r\n          (itemData) =>\r\n            (isOwnedTab && selectedCatObj.items.includes(itemData.id)) ||\r\n            (!isOwnedTab && !selectedCatObj.items.includes(itemData.id))\r\n        )\r\n        .map((itemData, index) => {\r\n          return (\r\n            <ItemButton\r\n              key={itemData.id}\r\n              itemData={itemData}\r\n              selected={selectedItem === itemData.id ? true : false}\r\n            />\r\n          );\r\n        });\r\n    } else return [];\r\n  }, [selectedCat, selectedItem, isOwnedTab]);\r\n\r\n  const renderColors = useCallback(() => {\r\n    return (\r\n      <Row\r\n        style={{\r\n          width: \"100%\",\r\n          // height: \"50px\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          // marginTop: \"-90px\",\r\n        }}\r\n      >\r\n        {Object.values(Colors).map((color, index) => {\r\n          return (\r\n            <Button\r\n              key={index}\r\n              disabled={!Boolean(selectedItem)}\r\n              style={{\r\n                visibility: \"visible\",\r\n                margin: \"8px\",\r\n                backgroundColor: color.hex,\r\n                border:\r\n                  selectedColor === color.id\r\n                    ? \"2.5px solid rgb(0 116 255)\"\r\n                    : \"1px solid #898e94\",\r\n              }}\r\n              onClick={() => {\r\n                let isSelected = selectedColor === color.id;\r\n                gameManager.studioSceneManager.handleChangeCatColor(\r\n                  selectedCat,\r\n                  isSelected ? null : color.hex\r\n                );\r\n                setSelectedColor(isSelected ? null : color.id);\r\n              }}\r\n              type=\"default\"\r\n              shape=\"circle\"\r\n              size=\"large\"\r\n            ></Button>\r\n          );\r\n        })}\r\n      </Row>\r\n    );\r\n  }, [selectedCat, selectedColor, selectedItem, gameManager]);\r\n\r\n  function showConfirm() {\r\n    confirm({\r\n      title: \"購入しますか？\",\r\n      icon: <ExclamationCircleOutlined />,\r\n      // content: 'Some descriptions',\r\n      okText: \"はい\",\r\n      closable: true,\r\n      cancelText: \"キャンセル\",\r\n      onOk() {\r\n        console.log(\"OK\");\r\n      },\r\n      onCancel() {\r\n        console.log(\"Cancel\");\r\n      },\r\n    });\r\n  }\r\n\r\n  const handleOnModalOpen = useCallback(\r\n    (selectedTab) => {\r\n      setSelectedModalData(() => {\r\n        if (selectedTab === AppTabsEnum.ownedTab) return appData.item_owned;\r\n        else return charcterData;\r\n      });\r\n      setSelectedListTab(selectedTab);\r\n      setIsOwnedTab(true);\r\n    },\r\n    [charcterData]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Row\r\n        style={{\r\n          position: \"fixed\",\r\n          width: \"100%\",\r\n          bottom: 0,\r\n          height: \"100%\",\r\n          pointerEvents: \"none\",\r\n        }}\r\n        type=\"flex\"\r\n      >\r\n        <Button\r\n          type=\"primary\"\r\n          icon={<HomeFilled />}\r\n          shape=\"circle\"\r\n          size=\"large\"\r\n          style={{\r\n            position: \"absolute\",\r\n            width: \"75px\",\r\n            height: \"75px\",\r\n            margin: \"15px\",\r\n            pointerEvents: \"all\",\r\n          }}\r\n          onClick={() => {}}\r\n        ></Button>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            pointerEvents: \"all\",\r\n            left: \"8%\",\r\n            top: \"6%\",\r\n            marginLeft:\"30%\"\r\n            // marginTop: \"15vh\",\r\n          }}\r\n        >\r\n          <Button\r\n            type={isOwnedTab ? \"primary\" : \"default\"}\r\n            onClick={() => {\r\n              setIsOwnedTab(true);\r\n              //remove 3d items\r\n              gameManager.studioSceneManager.clearCharcterData();\r\n            }}\r\n          >\r\n            物入れ\r\n          </Button>\r\n          <Button\r\n            type={!isOwnedTab ? \"primary\" : \"default\"}\r\n            onClick={() => {\r\n              setIsLoading(true);\r\n              setIsOwnedTab(false);\r\n              //load 3d items\r\n              gameManager.studioSceneManager.clearCharcterData();\r\n\r\n              const onFinish = (result) => {\r\n                setIsLoading(false);\r\n                setSelectedItem(\r\n                  gameManager.studioSceneManager.charcterProps[\r\n                    Object.keys(Categories)[0]\r\n                  ]\r\n                    ? gameManager.studioSceneManager.charcterProps[\r\n                        Object.keys(Categories)[0]\r\n                      ].myId\r\n                    : null\r\n                );\r\n                setCharcterData(result.data);\r\n                setTotalPrice(result.totalPrice);\r\n              };\r\n              gameManager.studioSceneManager.loadAllCharcterData(\r\n                appData.item_equipped,\r\n                onFinish\r\n              );\r\n            }}\r\n          >\r\n            お店\r\n          </Button>\r\n        </div>\r\n\r\n        <Col\r\n          span={24}\r\n          style={{\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <Row\r\n            justify=\"start\"\r\n            style={{\r\n              bottom: \"70%\",\r\n              position: \"absolute\",\r\n              width: \"100%\",\r\n              pointerEvents: \"none\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                pointerEvents: \"all\",\r\n                right: \"8%\",\r\n              }}\r\n            >\r\n              <Button\r\n                type=\"primary\"\r\n                icon={<IconFont type=\"icon-shoppingcart\" />}\r\n                shape=\"circle\"\r\n                size=\"large\"\r\n                disabled={isOwnedTab}\r\n                style={{\r\n                  width: \"60px\",\r\n                  height: \"60px\",\r\n                  margin: \"25px 10px\",\r\n                  pointerEvents: \"all\",\r\n                }}\r\n                onClick={showConfirm}\r\n              ></Button>\r\n              <a\r\n                style={{\r\n                  position: \"absolute\",\r\n                  right: \"40%\",\r\n                  bottom: \"0\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                {isOwnedTab ? 0 : totalPrice}\r\n              </a>\r\n              <div\r\n                style={{\r\n                  position: \"absolute\",\r\n                  width: \"15px\",\r\n                  height: \"15px\",\r\n                  right: \"0\",\r\n                  bottom: \"0\",\r\n                  background: `url(/Ui/items/${\"dollar.png\"})`,\r\n                  backgroundRepeat: \"no-repeat\",\r\n                  // border: \"1px solid #898e94\",\r\n                  boxSizing: \"border-box\",\r\n                  margin: \"2px 0px\",\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </Row>\r\n          <Row\r\n            justify=\"start\"\r\n            style={{\r\n              height: \"35%\",\r\n              maxHeight: \"250px\",\r\n              bottom: \"1%\",\r\n              position: \"absolute\",\r\n              width: \"100%\",\r\n              pointerEvents: \"all\",\r\n            }}\r\n          >\r\n            <>\r\n              <Spin spinning={isLoading}>\r\n                <ScrollMenu\r\n                  menuStyle={{ width: \"100%\", justifyContent: \"center\" }}\r\n                  alignCenter={true}\r\n                  translate={10}\r\n                  hideArrows={true}\r\n                  // alignOnResize={true}\r\n                  data={Object.keys(Categories).map((category, index) => {\r\n                    return (\r\n                      <CategoryButton\r\n                        key={category}\r\n                        category={category}\r\n                        selected={selectedCat}\r\n                      />\r\n                    );\r\n                  })}\r\n                  arrowLeft={\r\n                    <Button\r\n                      type=\"text\"\r\n                      icon={<LeftOutlined />}\r\n                      size={\"middle\"}\r\n                    />\r\n                  }\r\n                  arrowRight={\r\n                    <Button\r\n                      type=\"text\"\r\n                      icon={<RightOutlined />}\r\n                      size={\"middle\"}\r\n                    />\r\n                  }\r\n                  selected={selectedCat}\r\n                  onSelect={(key) => {\r\n                    setSelectedCat(key);\r\n                    setSelectedItem(\r\n                      gameManager.studioSceneManager.charcterProps[key]\r\n                        ? gameManager.studioSceneManager.charcterProps[key].myId\r\n                        : null\r\n                    );\r\n                  }}\r\n                />\r\n                {selectedCat === \"hair\" && renderColors()}\r\n                <ScrollMenu\r\n                  menuStyle={{ width: \"100%\", justifyContent: \"center\" }}\r\n                  translate={10}\r\n                  hideArrows={true}\r\n                  alignCenter={true}\r\n                  alignOnResize={true}\r\n                  data={itemsPerCategory}\r\n                  arrowLeft={\r\n                    <Button\r\n                      type=\"text\"\r\n                      icon={<LeftOutlined />}\r\n                      size={\"middle\"}\r\n                    />\r\n                  }\r\n                  arrowRight={\r\n                    <Button\r\n                      type=\"text\"\r\n                      icon={<RightOutlined />}\r\n                      size={\"middle\"}\r\n                    />\r\n                  }\r\n                  selected={selectedItem}\r\n                  onSelect={(key) => {\r\n                    let newValue = key === selectedItem ? undefined : key;\r\n                    loadItemPerId(newValue);\r\n                    setSelectedItem(newValue);\r\n                    if (selectedCat === \"hair\") setSelectedColor(null);\r\n                  }}\r\n                />\r\n              </Spin>\r\n            </>\r\n\r\n            {/* </Col> */}\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      {/* <ListModal\r\n        isMenuVisible={isOwnedTab}\r\n        selectedListTab={selectedListTab}\r\n        selectedModalData={selectedModalData}\r\n        setIsMenuVisible={setIsOwnedTab}\r\n      /> */}\r\n    </>\r\n  );\r\n};\r\nexport default EditorController;\r\n"]},"metadata":{},"sourceType":"module"}