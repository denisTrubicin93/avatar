{"ast":null,"code":"import * as BABYLON from \"babylonjs\";\nimport \"babylonjs-inspector\";\nimport \"babylonjs-loaders\";\nimport LoaderManager from \"./LoaderManager\";\nimport { Categories } from \"../../Config.json\";\nexport default class StudioSceneManager {\n  constructor(game) {\n    this.game = game; //Main Props\n\n    this.scene = null;\n    this.studioGui = null;\n    this.mainCamera = null;\n    this.pipline = null; //\n\n    this.charcterProps = {}; //initObj\n\n    Object.keys(Categories).forEach(key => {\n      this.charcterProps[key] = null;\n    });\n    this.hdrTexturePath = \"https://raw.githubusercontent.com/PatrickRyanMS/BabylonJStextures/master/DDS/Runyon_Canyon_A_2k_cube_specular.dds\";\n    this.skyboxPath = \"https://assets.babylonjs.com/environments/environmentSpecular.env\";\n  } //#region  MainSceneProperties\n\n\n  CreateScene() {\n    //Create Bts Scene\n    //Create Scene\n    this.scene = new BABYLON.Scene(this.game.engine);\n    this.scene.clearColor = new BABYLON.Color4(0, 0, 0, 0.0000000000000001);\n    this.scene.imageProcessingConfiguration.colorCurvesEnabled = true;\n    this.scene.imageProcessingConfiguration.colorCurves = new BABYLON.ColorCurves();\n    this.scene.imageProcessingConfiguration.colorCurves.globalSaturation = 0;\n    this.scene.imageProcessingConfiguration.contrast = 2.5;\n    this.scene.imageProcessingConfiguration.vignetteEnabled = true;\n    this.scene.onPointerObservable.add(pointerInfo => {\n      switch (pointerInfo.type) {\n        case BABYLON.PointerEventTypes.POINTERDOWN:\n          this.onPointerDown(pointerInfo.event);\n          break;\n\n        case BABYLON.PointerEventTypes.POINTERUP:\n          this.onPointerUp(pointerInfo.event);\n          break;\n\n        case BABYLON.PointerEventTypes.POINTERMOVE:\n          this.onPointerMove(pointerInfo.event);\n          break;\n\n        case BABYLON.PointerEventTypes.POINTERDOUBLETAP:\n          break;\n\n        case BABYLON.PointerEventTypes.POINTERWHEEL:\n          this.MouseWheelHandler();\n          break;\n\n        default:\n          break;\n      }\n    }); //Installation\n\n    this.createCamera();\n    this.setUpEnvironMent(); //Create LoadManager instance\n\n    this.loaderManager = new LoaderManager(this);\n    this.loaderManager.loadItemById(\"base\", \"base\"); //start load base Charcter\n    // this.scene.debugLayer.show();\n\n    return this.scene;\n  }\n\n  createCamera() {\n    this.mainCamera = new BABYLON.ArcRotateCamera(\"ArcCamera\", 4.69, 1.42, 55, new BABYLON.Vector3(0, 0, 0), this.scene);\n    this.mainCamera.attachControl(this.game.canvas, true);\n    this.mainCamera.lowerRadiusLimit = 20;\n    this.mainCamera.upperRadiusLimit = 85;\n    this.mainCamera.lowerBetaLimit = 0.85;\n    this.mainCamera.upperBetaLimit = 1.5;\n    this.mainCamera.minZ = 0.2;\n    this.mainCamera.target = new BABYLON.Vector3(3, 4, 0.7);\n    this.mainCamera.wheelPrecision = 10;\n    this.mainCamera.useBouncingBehavior = true;\n  }\n\n  setUpEnvironMent() {\n    let hemiLight = new BABYLON.HemisphericLight(\"HemiLight\", new BABYLON.Vector3(0, -1, -0), this.scene);\n    hemiLight.intensity = 1;\n    let dirLight = new BABYLON.DirectionalLight(\"DirectionalLight\", new BABYLON.Vector3(0, -1, 0), this.scene);\n    dirLight.position = new BABYLON.Vector3(3, 9, 3);\n    this.alphaMaterial = new BABYLON.StandardMaterial(\"alphaMat\", this.scene);\n    this.alphaMaterial.alpha = 0; // ShadowGenerator\n\n    this.shadowGenerator = new BABYLON.ShadowGenerator(512, dirLight);\n    this.shadowGenerator.useBlurExponentialShadowMap = true;\n    this.shadowGenerator.filteringQuality = BABYLON.ShadowGenerator.QUALITY_HIGH;\n    dirLight.intensity = 1;\n    dirLight.shadowMinZ = 0;\n    dirLight.shadowMaxZ = 500;\n    let skybox = BABYLON.CubeTexture.CreateFromPrefilteredData(this.skyboxPath, this.scene);\n    skybox.gammaSpace = true;\n    let skyboxMaterial = new BABYLON.StandardMaterial(\"sky7Box\", this.scene);\n    skyboxMaterial.backFaceCulling = false;\n    skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(this.skyboxPath, this.scene);\n    skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\n    skybox.infiniteDistance = true;\n    skybox.material = skyboxMaterial; // Our built-in 'ground' shape. Params: name, width, depth, subdivs, scene\n\n    let ground = BABYLON.Mesh.CreateGround(\"ground1\", 35, 35, 150, this.scene);\n    ground.position.y -= 4;\n    ground.receiveShadows = true; // Create and tweak the background material.\n\n    var backgroundMaterial = new BABYLON.BackgroundMaterial(\"backgroundMaterial\", this.scene);\n    backgroundMaterial.diffuseTexture = new BABYLON.Texture(\"./Textuers/scene/backgroundGround.png\", this.scene);\n    backgroundMaterial.diffuseTexture.hasAlpha = true;\n    backgroundMaterial.opacityFresnel = false;\n    backgroundMaterial.shadowLevel = 0.85;\n    backgroundMaterial.alpha = 0.4; //Create CubicTexture\n    // let skyboxCubecTexture = BABYLON.CubeTexture.CreateFromPrefilteredData(\n    //     // this.skyboxPath,\n    //         \"./environment/empty_warehouse2.env\",\n    //         this.scene\n    //         );\n    //     skyboxCubecTexture.gammaSpace = true;\n    //     skyboxCubecTexture.level = .8;\n    // this.scene.environmentTexture=skyboxCubecTexture;\n    //Mirror\n\n    this.mirror = new BABYLON.MirrorTexture(\"mirror\", 512, this.scene); // this.mirror.mirrorPlane = new BABYLON.Plane(0, -1, -.5, 0);\n\n    this.mirror.mirrorPlane = new BABYLON.Plane(0, -0.8, -0, -1);\n    this.mirror.adaptiveBlurKernel = 32; // this.Groundmirror.mirrorPlane = new BABYLON.Plane(0, -.69, -0, -1);\n\n    backgroundMaterial.reflectionTexture = this.mirror;\n    backgroundMaterial.reflectionFresnel = true;\n    backgroundMaterial.reflectionStandardFresnelWeight = 0.9;\n    backgroundMaterial.reflectionTexture.level = 0.8;\n    ground.material = backgroundMaterial; // var box2 = BABYLON.MeshBuilder.CreateBox(\n    //   \"box\",\n    //   {\n    //     width: BoxWidth,\n    //     depth: BoxLength,\n    //     height: 10,\n    //   },\n    //   this.scene\n    // );\n    // let mat = new BABYLON.PBRMaterial(\"DD\",this.scene);\n    // box2.material = mat;\n    // mat.albedoColor = new BABYLON.Color3(103/255,103/255,103/255)\n    // box2.position = new BABYLON.Vector3(0, 5, 1);\n    // box2.visibility = 0.2;\n    // this.scene.registerBeforeRender(() => {\n    // });\n    // //Create RenderPipline\n    // this.RenderPipline = new BABYLON.DefaultRenderingPipeline(\"default\", // The name of the pipeline\n    // true, // Do you want HDR textures ?\n    // this.scene, // The scene instance\n    // [this.mainCamera] // The list of cameras to be attached to\n    // );\n    // this.RenderPipline.samples = s4;\n    // this.RenderPipline.bloomEnabled=true;\n    // // this.RenderPipline.glowLayer.intensity=3.5;\n    // // this.RenderPipline.glowLayer.blurKernelSize=180;\n    // this.RenderPipline.MineglowLayer =new BABYLON.GlowLayer(\"glowww\", this.scene, {\n    //     mainTextureFixedSize: 512,\n    //     blurKernelSize: 190\n    //     }\n    // );\n    // this.RenderPipline.MineglowLayer.intensity = 2.70;\n    //#region fff\n    // var alpha = 0;\n    // this.scene.registerBeforeRender(() => {\n    // });\n    //#endregion\n    // var skyBack = new BABYLON.Layer(\"skyBack\", \"./Textuers/scene/skyBack_edit.png\", this.scene,true, new BABYLON.Color4(1,1,1,1));\n  } //#endregion\n  //region SceneActions\n\n\n  handleLoadItemPerId(type, name, onLoad) {\n    const isExsits = this.charcterProps[type];\n\n    if (isExsits) {\n      this.charcterProps[type].dispose();\n      this.charcterProps[type] = null;\n    }\n\n    if (!name) {\n      onLoad({\n        data: this.getCharcterSummary(),\n        totalPrice: this.getTotatlPrice()\n      });\n      return;\n    }\n\n    this.loaderManager.loadItemById(type, name, onLoad);\n  }\n\n  getCharcterSummary() {\n    return Object.entries(this.charcterProps).filter(([key, value]) => {\n      return key !== \"base\";\n    }).map(([key, value]) => {\n      if (value) {\n        return {\n          category: key,\n          item: value.itemName,\n          price: value.price\n        };\n      } else {\n        return {\n          category: key,\n          item: \"No Item Selected\",\n          price: 0\n        };\n      }\n    });\n  }\n\n  getTotatlPrice() {\n    return Object.values(this.charcterProps).reduce((sum, ele) => {\n      if (ele && ele.myId !== \"base\") return sum + ele.price;else return sum;\n    }, 0);\n  }\n\n  handleChangeCatColor(catType, hexColor) {\n    const isExsits = this.charcterProps[catType];\n\n    if (isExsits) {\n      if (!this.charcterProps[catType].getChildMeshes(true)[0].defualtColor) {\n        this.charcterProps[catType].getChildMeshes(true)[0].defualtColor = this.charcterProps[catType].getChildMeshes(true)[0].material.albedoColor.toHexString();\n      }\n\n      if (hexColor) this.charcterProps[catType].getChildMeshes(true)[0].material.albedoColor = new BABYLON.Color3.FromHexString(hexColor);else {\n        this.charcterProps[catType].getChildMeshes(true)[0].material.albedoColor = new BABYLON.Color3.FromHexString(this.charcterProps[catType].getChildMeshes(true)[0].defualtColor);\n      }\n    }\n  }\n\n  loadAllCharcterData(items, onFinish) {\n    let index = 0;\n\n    const onItemLoad = result => {\n      index++;\n      if (index === loadedItems.length) onFinish(result);\n    };\n\n    let loadedItems = items.filter(catObj => catObj.item);\n    loadedItems.forEach(catObj => {\n      this.loaderManager.loadItemById(catObj.category, catObj.item, onItemLoad);\n    });\n  }\n\n  clearCharcterData() {\n    Object.keys(Categories).forEach(key => {\n      if (this.charcterProps[key]) this.charcterProps[key].dispose();\n      this.charcterProps[key] = null;\n    });\n  } //#endregion\n  //#region UserInput (Mouse)\n\n\n  onPointerDown(ev) {}\n\n  onPointerUp(ev) {}\n\n  onPointerMove(ev) {}\n\n  MouseWheelHandler(ev) {} //#endregion\n\n\n}","map":{"version":3,"sources":["D:/collection/PROJECT`s/JAPAN/8863074498439810063enhancementv7/src/Babylon/StudioScene/StudioSceneManager.js"],"names":["BABYLON","LoaderManager","Categories","StudioSceneManager","constructor","game","scene","studioGui","mainCamera","pipline","charcterProps","Object","keys","forEach","key","hdrTexturePath","skyboxPath","CreateScene","Scene","engine","clearColor","Color4","imageProcessingConfiguration","colorCurvesEnabled","colorCurves","ColorCurves","globalSaturation","contrast","vignetteEnabled","onPointerObservable","add","pointerInfo","type","PointerEventTypes","POINTERDOWN","onPointerDown","event","POINTERUP","onPointerUp","POINTERMOVE","onPointerMove","POINTERDOUBLETAP","POINTERWHEEL","MouseWheelHandler","createCamera","setUpEnvironMent","loaderManager","loadItemById","ArcRotateCamera","Vector3","attachControl","canvas","lowerRadiusLimit","upperRadiusLimit","lowerBetaLimit","upperBetaLimit","minZ","target","wheelPrecision","useBouncingBehavior","hemiLight","HemisphericLight","intensity","dirLight","DirectionalLight","position","alphaMaterial","StandardMaterial","alpha","shadowGenerator","ShadowGenerator","useBlurExponentialShadowMap","filteringQuality","QUALITY_HIGH","shadowMinZ","shadowMaxZ","skybox","CubeTexture","CreateFromPrefilteredData","gammaSpace","skyboxMaterial","backFaceCulling","reflectionTexture","coordinatesMode","Texture","SKYBOX_MODE","infiniteDistance","material","ground","Mesh","CreateGround","y","receiveShadows","backgroundMaterial","BackgroundMaterial","diffuseTexture","hasAlpha","opacityFresnel","shadowLevel","mirror","MirrorTexture","mirrorPlane","Plane","adaptiveBlurKernel","reflectionFresnel","reflectionStandardFresnelWeight","level","handleLoadItemPerId","name","onLoad","isExsits","dispose","data","getCharcterSummary","totalPrice","getTotatlPrice","entries","filter","value","map","category","item","itemName","price","values","reduce","sum","ele","myId","handleChangeCatColor","catType","hexColor","getChildMeshes","defualtColor","albedoColor","toHexString","Color3","FromHexString","loadAllCharcterData","items","onFinish","index","onItemLoad","result","loadedItems","length","catObj","clearCharcterData","ev"],"mappings":"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","sourcesContent":["import * as BABYLON from \"babylonjs\";\r\nimport \"babylonjs-inspector\";\r\nimport \"babylonjs-loaders\";\r\nimport LoaderManager from \"./LoaderManager\";\r\nimport { Categories } from \"../../Config.json\";\r\n\r\nexport default class StudioSceneManager {\r\n  constructor(game) {\r\n    this.game = game;\r\n    //Main Props\r\n    this.scene = null;\r\n    this.studioGui = null;\r\n    this.mainCamera = null;\r\n    this.pipline = null;\r\n\r\n    //\r\n    this.charcterProps = {};\r\n    //initObj\r\n    Object.keys(Categories).forEach((key) => {\r\n      this.charcterProps[key] = null;\r\n    });\r\n\r\n    this.hdrTexturePath =\r\n      \"https://raw.githubusercontent.com/PatrickRyanMS/BabylonJStextures/master/DDS/Runyon_Canyon_A_2k_cube_specular.dds\";\r\n    this.skyboxPath =\r\n      \"https://assets.babylonjs.com/environments/environmentSpecular.env\";\r\n  }\r\n\r\n  //#region  MainSceneProperties\r\n  CreateScene() {\r\n    //Create Bts Scene\r\n    //Create Scene\r\n    this.scene = new BABYLON.Scene(this.game.engine);\r\n    this.scene.clearColor = new BABYLON.Color4(0, 0, 0, 0.0000000000000001);\r\n    this.scene.imageProcessingConfiguration.colorCurvesEnabled = true;\r\n    this.scene.imageProcessingConfiguration.colorCurves = new BABYLON.ColorCurves();\r\n    this.scene.imageProcessingConfiguration.colorCurves.globalSaturation = 0;\r\n    this.scene.imageProcessingConfiguration.contrast = 2.5;\r\n    this.scene.imageProcessingConfiguration.vignetteEnabled = true;\r\n\r\n    this.scene.onPointerObservable.add((pointerInfo) => {\r\n      switch (pointerInfo.type) {\r\n        case BABYLON.PointerEventTypes.POINTERDOWN:\r\n          this.onPointerDown(pointerInfo.event);\r\n          break;\r\n        case BABYLON.PointerEventTypes.POINTERUP:\r\n          this.onPointerUp(pointerInfo.event);\r\n          break;\r\n        case BABYLON.PointerEventTypes.POINTERMOVE:\r\n          this.onPointerMove(pointerInfo.event);\r\n          break;\r\n        case BABYLON.PointerEventTypes.POINTERDOUBLETAP:\r\n          break;\r\n        case BABYLON.PointerEventTypes.POINTERWHEEL:\r\n          this.MouseWheelHandler();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    //Installation\r\n    this.createCamera();\r\n    this.setUpEnvironMent();\r\n\r\n    //Create LoadManager instance\r\n    this.loaderManager = new LoaderManager(this);\r\n    this.loaderManager.loadItemById(\"base\", \"base\"); //start load base Charcter\r\n\r\n    // this.scene.debugLayer.show();\r\n\r\n    return this.scene;\r\n  }\r\n  createCamera() {\r\n    this.mainCamera = new BABYLON.ArcRotateCamera(\r\n      \"ArcCamera\",\r\n      4.69,\r\n      1.42,\r\n      55,\r\n      new BABYLON.Vector3(0, 0, 0),\r\n      this.scene\r\n    );\r\n    this.mainCamera.attachControl(this.game.canvas, true);\r\n\r\n    this.mainCamera.lowerRadiusLimit = 20;\r\n    this.mainCamera.upperRadiusLimit = 85;\r\n\r\n    this.mainCamera.lowerBetaLimit = 0.85;\r\n    this.mainCamera.upperBetaLimit = 1.5;\r\n\r\n    this.mainCamera.minZ = 0.2;\r\n    this.mainCamera.target = new BABYLON.Vector3(3, 4, 0.7);\r\n\r\n    this.mainCamera.wheelPrecision = 10;\r\n    this.mainCamera.useBouncingBehavior = true;\r\n  }\r\n  setUpEnvironMent() {\r\n    let hemiLight = new BABYLON.HemisphericLight(\r\n      \"HemiLight\",\r\n      new BABYLON.Vector3(0, -1, -0),\r\n      this.scene\r\n    );\r\n    hemiLight.intensity = 1;\r\n\r\n    let dirLight = new BABYLON.DirectionalLight(\r\n      \"DirectionalLight\",\r\n      new BABYLON.Vector3(0, -1, 0),\r\n      this.scene\r\n    );\r\n    dirLight.position = new BABYLON.Vector3(3, 9, 3);\r\n\r\n    this.alphaMaterial = new BABYLON.StandardMaterial(\"alphaMat\", this.scene);\r\n    this.alphaMaterial.alpha = 0;\r\n\r\n    // ShadowGenerator\r\n    this.shadowGenerator = new BABYLON.ShadowGenerator(512, dirLight);\r\n    this.shadowGenerator.useBlurExponentialShadowMap = true;\r\n    this.shadowGenerator.filteringQuality =\r\n      BABYLON.ShadowGenerator.QUALITY_HIGH;\r\n    dirLight.intensity = 1;\r\n    dirLight.shadowMinZ = 0;\r\n    dirLight.shadowMaxZ = 500;\r\n\r\n    let skybox = BABYLON.CubeTexture.CreateFromPrefilteredData(\r\n      this.skyboxPath,\r\n      this.scene\r\n    );\r\n    skybox.gammaSpace = true;\r\n\r\n    let skyboxMaterial = new BABYLON.StandardMaterial(\"sky7Box\", this.scene);\r\n    skyboxMaterial.backFaceCulling = false;\r\n    skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\r\n      this.skyboxPath,\r\n      this.scene\r\n    );\r\n    skyboxMaterial.reflectionTexture.coordinatesMode =\r\n      BABYLON.Texture.SKYBOX_MODE;\r\n    skybox.infiniteDistance = true;\r\n    skybox.material = skyboxMaterial;\r\n\r\n    // Our built-in 'ground' shape. Params: name, width, depth, subdivs, scene\r\n    let ground = BABYLON.Mesh.CreateGround(\"ground1\", 35, 35, 150, this.scene);\r\n    ground.position.y -= 4;\r\n    ground.receiveShadows = true;\r\n\r\n    // Create and tweak the background material.\r\n    var backgroundMaterial = new BABYLON.BackgroundMaterial(\r\n      \"backgroundMaterial\",\r\n      this.scene\r\n    );\r\n    backgroundMaterial.diffuseTexture = new BABYLON.Texture(\r\n      \"./Textuers/scene/backgroundGround.png\",\r\n      this.scene\r\n    );\r\n    backgroundMaterial.diffuseTexture.hasAlpha = true;\r\n    backgroundMaterial.opacityFresnel = false;\r\n    backgroundMaterial.shadowLevel = 0.85;\r\n    backgroundMaterial.alpha = 0.4;\r\n\r\n    //Create CubicTexture\r\n    // let skyboxCubecTexture = BABYLON.CubeTexture.CreateFromPrefilteredData(\r\n    //     // this.skyboxPath,\r\n    //         \"./environment/empty_warehouse2.env\",\r\n    //         this.scene\r\n    //         );\r\n    //     skyboxCubecTexture.gammaSpace = true;\r\n    //     skyboxCubecTexture.level = .8;\r\n    // this.scene.environmentTexture=skyboxCubecTexture;\r\n\r\n    //Mirror\r\n    this.mirror = new BABYLON.MirrorTexture(\"mirror\", 512, this.scene);\r\n    // this.mirror.mirrorPlane = new BABYLON.Plane(0, -1, -.5, 0);\r\n    this.mirror.mirrorPlane = new BABYLON.Plane(0, -0.8, -0, -1);\r\n\r\n    this.mirror.adaptiveBlurKernel = 32;\r\n    // this.Groundmirror.mirrorPlane = new BABYLON.Plane(0, -.69, -0, -1);\r\n    backgroundMaterial.reflectionTexture = this.mirror;\r\n    backgroundMaterial.reflectionFresnel = true;\r\n    backgroundMaterial.reflectionStandardFresnelWeight = 0.9;\r\n    backgroundMaterial.reflectionTexture.level = 0.8;\r\n    ground.material = backgroundMaterial;\r\n\r\n    // var box2 = BABYLON.MeshBuilder.CreateBox(\r\n    //   \"box\",\r\n    //   {\r\n    //     width: BoxWidth,\r\n    //     depth: BoxLength,\r\n    //     height: 10,\r\n    //   },\r\n    //   this.scene\r\n    // );\r\n    // let mat = new BABYLON.PBRMaterial(\"DD\",this.scene);\r\n    // box2.material = mat;\r\n    // mat.albedoColor = new BABYLON.Color3(103/255,103/255,103/255)\r\n    // box2.position = new BABYLON.Vector3(0, 5, 1);\r\n    // box2.visibility = 0.2;\r\n\r\n    // this.scene.registerBeforeRender(() => {\r\n    // });\r\n\r\n    // //Create RenderPipline\r\n    // this.RenderPipline = new BABYLON.DefaultRenderingPipeline(\"default\", // The name of the pipeline\r\n    // true, // Do you want HDR textures ?\r\n    // this.scene, // The scene instance\r\n    // [this.mainCamera] // The list of cameras to be attached to\r\n    // );\r\n\r\n    // this.RenderPipline.samples = s4;\r\n    // this.RenderPipline.bloomEnabled=true;\r\n    // // this.RenderPipline.glowLayer.intensity=3.5;\r\n    // // this.RenderPipline.glowLayer.blurKernelSize=180;\r\n\r\n    // this.RenderPipline.MineglowLayer =new BABYLON.GlowLayer(\"glowww\", this.scene, {\r\n    //     mainTextureFixedSize: 512,\r\n    //     blurKernelSize: 190\r\n    //     }\r\n    // );\r\n    // this.RenderPipline.MineglowLayer.intensity = 2.70;\r\n\r\n    //#region fff\r\n    // var alpha = 0;\r\n    // this.scene.registerBeforeRender(() => {\r\n    // });\r\n    //#endregion\r\n\r\n    // var skyBack = new BABYLON.Layer(\"skyBack\", \"./Textuers/scene/skyBack_edit.png\", this.scene,true, new BABYLON.Color4(1,1,1,1));\r\n  }\r\n  //#endregion\r\n\r\n  //region SceneActions\r\n  handleLoadItemPerId(type, name, onLoad) {\r\n    const isExsits = this.charcterProps[type];\r\n    if (isExsits) {\r\n      this.charcterProps[type].dispose();\r\n      this.charcterProps[type] = null;\r\n    }\r\n    if (!name) {\r\n      onLoad({\r\n        data: this.getCharcterSummary(),\r\n        totalPrice: this.getTotatlPrice(),\r\n      });\r\n      return;\r\n    }\r\n    this.loaderManager.loadItemById(type, name, onLoad);\r\n  }\r\n  getCharcterSummary() {\r\n    return Object.entries(this.charcterProps)\r\n      .filter(([key, value]) => {\r\n        return key !== \"base\";\r\n      })\r\n      .map(([key, value]) => {\r\n        if (value) {\r\n          return { category: key, item: value.itemName, price: value.price };\r\n        } else {\r\n          return { category: key, item: \"No Item Selected\", price: 0 };\r\n        }\r\n      });\r\n  }\r\n  getTotatlPrice() {\r\n    return Object.values(this.charcterProps).reduce((sum, ele) => {\r\n      if (ele && ele.myId !== \"base\") return sum + ele.price;\r\n      else return sum;\r\n    }, 0);\r\n  }\r\n  handleChangeCatColor(catType, hexColor) {\r\n    const isExsits = this.charcterProps[catType];\r\n    if (isExsits) {\r\n      if (!this.charcterProps[catType].getChildMeshes(true)[0].defualtColor) {\r\n        this.charcterProps[catType].getChildMeshes(\r\n          true\r\n        )[0].defualtColor = this.charcterProps[catType]\r\n          .getChildMeshes(true)[0]\r\n          .material.albedoColor.toHexString();\r\n      }\r\n      if (hexColor)\r\n        this.charcterProps[catType].getChildMeshes(\r\n          true\r\n        )[0].material.albedoColor = new BABYLON.Color3.FromHexString(hexColor);\r\n      else {\r\n        this.charcterProps[catType].getChildMeshes(\r\n          true\r\n        )[0].material.albedoColor = new BABYLON.Color3.FromHexString(\r\n          this.charcterProps[catType].getChildMeshes(true)[0].defualtColor\r\n        );\r\n      }\r\n    }\r\n  }\r\n  loadAllCharcterData(items, onFinish) {\r\n    let index = 0;\r\n    const onItemLoad = (result) => {\r\n      index++;\r\n      if (index === loadedItems.length) onFinish(result);\r\n    };\r\n\r\n    let loadedItems = items.filter((catObj) => catObj.item);\r\n    loadedItems.forEach((catObj) => {\r\n      this.loaderManager.loadItemById(catObj.category, catObj.item, onItemLoad);\r\n    });\r\n\r\n  }\r\n  clearCharcterData(){\r\n    Object.keys(Categories).forEach((key) => {\r\n      if(this.charcterProps[key]) this.charcterProps[key].dispose();\r\n      this.charcterProps[key] = null;\r\n    });\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region UserInput (Mouse)\r\n  onPointerDown(ev) {}\r\n  onPointerUp(ev) {}\r\n  onPointerMove(ev) {}\r\n  MouseWheelHandler(ev) {}\r\n  //#endregion\r\n}\r\n"]},"metadata":{},"sourceType":"module"}