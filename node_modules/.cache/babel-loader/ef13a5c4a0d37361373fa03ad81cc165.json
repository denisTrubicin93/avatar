{"ast":null,"code":"var _jsxFileName = \"D:\\\\collection\\\\PROJECT`s\\\\JAPAN\\\\8863074498439810063enhancementv7\\\\src\\\\Editor\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createRef, createContext, useEffect, useCallback, useState, useMemo } from \"react\";\nimport Row from \"antd/lib/row\";\nimport Col from \"antd/lib/col\";\nimport \"../index.css\"; //Components\n\nimport EditorController from \"./EditorController\";\nimport { AppTabsEnum, appData } from \"../AppUtils\";\nimport BabylonManager from \"../BabylonManager\"; //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gmRef = /*#__PURE__*/createRef(null);\nexport const GmContext = /*#__PURE__*/createContext(null); //\n\nconst Editor = () => {\n  _s();\n\n  const [gameManager, setGameManager] = useState(null);\n  const [selectedTab, setSeletedTab] = useState(AppTabsEnum.editorTab);\n  useEffect(() => {\n    const GManger = BabylonManager(gmRef.current).GManger; //Create Babylonjs Ref\n\n    setGameManager(GManger);\n  }, [setGameManager]);\n  const setHandler = useCallback(newHandler => {\n    setGameManager(GManger => {\n      GManger.studioSceneManager.handlers = newHandler; //Hnadlers\n\n      return GManger;\n    });\n  }, []);\n  const renderTabs = useCallback(() => {\n    switch (selectedTab) {\n      default:\n      case AppTabsEnum.editorTab:\n        return /*#__PURE__*/_jsxDEV(Row, {\n          style: {\n            height: \"100%\"\n          },\n          type: \"flex\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            style: {\n              height: \"100%\",\n              background: \"radial-gradient(at top, #fff 0%, #fff 100%) top\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(EditorController, {\n              appData: appData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n              className: \"canvas\",\n              ref: gmRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this);\n    }\n  }, [selectedTab]);\n  return /*#__PURE__*/_jsxDEV(GmContext.Provider, {\n    value: {\n      gm: gameManager,\n      setHandler: setHandler\n    },\n    children: renderTabs()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Editor, \"wiw6FvfnE6dvmeEFK/OWtTsasPo=\");\n\n_c = Editor;\nexport default Editor; // On Windows Shift + Alt + F.\n// On Mac Shift + Option + F.\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["D:/collection/PROJECT`s/JAPAN/8863074498439810063enhancementv7/src/Editor/index.jsx"],"names":["React","createRef","createContext","useEffect","useCallback","useState","useMemo","Row","Col","EditorController","AppTabsEnum","appData","BabylonManager","gmRef","GmContext","Editor","gameManager","setGameManager","selectedTab","setSeletedTab","editorTab","GManger","current","setHandler","newHandler","studioSceneManager","handlers","renderTabs","height","background","gm"],"mappings":";;;AAAA,OAAOA,KAAP,IACEC,SADF,EAEEC,aAFF,EAGEC,SAHF,EAIEC,WAJF,EAKEC,QALF,EAMEC,OANF,QAOO,OAPP;AAQA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAO,cAAP,C,CAEA;;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,aAArC;AACA,OAAOC,cAAP,MAA2B,mBAA3B,C,CACA;;;AACA,MAAMC,KAAK,gBAAGZ,SAAS,CAAC,IAAD,CAAvB;AACA,OAAO,MAAMa,SAAS,gBAAGZ,aAAa,CAAC,IAAD,CAA/B,C,CACP;;AAEA,MAAMa,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACa,WAAD,EAAcC,aAAd,IAA+Bd,QAAQ,CAACK,WAAW,CAACU,SAAb,CAA7C;AAGAjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,OAAO,GAAGT,cAAc,CAACC,KAAK,CAACS,OAAP,CAAd,CAA8BD,OAA9C,CADc,CACyC;;AACvDJ,IAAAA,cAAc,CAACI,OAAD,CAAd;AACD,GAHQ,EAGN,CAACJ,cAAD,CAHM,CAAT;AAKA,QAAMM,UAAU,GAAGnB,WAAW,CAAEoB,UAAD,IAAc;AAC3CP,IAAAA,cAAc,CAAEI,OAAD,IAAW;AAC1BA,MAAAA,OAAO,CAACI,kBAAR,CAA2BC,QAA3B,GAAsCF,UAAtC,CAD0B,CACwB;;AAClD,aAAOH,OAAP;AACD,KAHe,CAAd;AAID,GAL6B,EAK5B,EAL4B,CAA9B;AAOA,QAAMM,UAAU,GAAGvB,WAAW,CAAC,MAAM;AACnC,YAAQc,WAAR;AACE;AACA,WAAKR,WAAW,CAACU,SAAjB;AACE,4BACE,QAAC,GAAD;AAAK,UAAA,KAAK,EAAE;AAAEQ,YAAAA,MAAM,EAAE;AAAV,WAAZ;AAAgC,UAAA,IAAI,EAAC,MAArC;AAAA,iCACE,QAAC,GAAD;AACE,YAAA,IAAI,EAAE,EADR;AAEE,YAAA,KAAK,EAAE;AACLA,cAAAA,MAAM,EAAE,MADH;AAELC,cAAAA,UAAU,EAAE;AAFP,aAFT;AAAA,oCAOE,QAAC,gBAAD;AACE,cAAA,OAAO,EAAElB;AADX;AAAA;AAAA;AAAA;AAAA,oBAPF,eAUE;AAAgB,cAAA,SAAS,EAAC,QAA1B;AAAmC,cAAA,GAAG,EAAEE;AAAxC;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAHJ;AAoBD,GArB6B,EAqB3B,CAACK,WAAD,CArB2B,CAA9B;AAuBA,sBACE,QAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAE;AAACY,MAAAA,EAAE,EAACd,WAAJ;AAAiBO,MAAAA,UAAU,EAAEA;AAA7B,KAA3B;AAAA,cAAsEI,UAAU;AAAhF;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CA3CD;;GAAMZ,M;;KAAAA,M;AA4CN,eAAeA,MAAf,C,CAEA;AACA","sourcesContent":["import React, {\r\n  createRef,\r\n  createContext,\r\n  useEffect,\r\n  useCallback,\r\n  useState,\r\n  useMemo,\r\n} from \"react\";\r\nimport Row from \"antd/lib/row\";\r\nimport Col from \"antd/lib/col\";\r\nimport \"../index.css\";\r\n\r\n//Components\r\nimport EditorController from \"./EditorController\";\r\nimport { AppTabsEnum, appData } from \"../AppUtils\";\r\nimport BabylonManager from \"../BabylonManager\";\r\n//\r\nconst gmRef = createRef(null);\r\nexport const GmContext = createContext(null);\r\n//\r\n\r\nconst Editor = () => {\r\n  const [gameManager, setGameManager] = useState(null);\r\n  const [selectedTab, setSeletedTab] = useState(AppTabsEnum.editorTab);\r\n\r\n\r\n  useEffect(() => {\r\n    const GManger = BabylonManager(gmRef.current).GManger; //Create Babylonjs Ref\r\n    setGameManager(GManger);\r\n  }, [setGameManager]);\r\n\r\n  const setHandler = useCallback((newHandler)=>{\r\n    setGameManager((GManger)=>{\r\n    GManger.studioSceneManager.handlers = newHandler; //Hnadlers\r\n    return GManger;\r\n  });\r\n  },[])\r\n\r\n  const renderTabs = useCallback(() => {\r\n    switch (selectedTab) {\r\n      default:\r\n      case AppTabsEnum.editorTab:\r\n        return (\r\n          <Row style={{ height: \"100%\" }} type=\"flex\">\r\n            <Col\r\n              span={24}\r\n              style={{\r\n                height: \"100%\",\r\n                background: \"radial-gradient(at top, #fff 0%, #fff 100%) top\",\r\n              }}\r\n            >\r\n              <EditorController\r\n                appData={appData}\r\n              />\r\n              <canvas {...{}} className=\"canvas\" ref={gmRef} />\r\n            </Col>\r\n          </Row>\r\n        );\r\n    }\r\n  }, [selectedTab]);\r\n\r\n  return (\r\n    <GmContext.Provider value={{gm:gameManager, setHandler: setHandler}}>{renderTabs()}</GmContext.Provider>\r\n  );\r\n};\r\nexport default Editor;\r\n\r\n// On Windows Shift + Alt + F.\r\n// On Mac Shift + Option + F.\r\n"]},"metadata":{},"sourceType":"module"}